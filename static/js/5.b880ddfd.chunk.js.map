{"version":3,"sources":["helpers/messageFn.js"],"names":["generateReplyMessage","message","toLowerCase","includes","findMatchingResponse","type","a","then","eachCommonFn","currentPeriod","getCurrentPeriod","console","log","Messages"],"mappings":"0PAEaA,EAAuB,SAACC,GA8BnC,OA7BAA,EAAQC,eAEHD,EAAQE,SAAS,UAAYF,EAAQE,SAAS,OAASF,EAAQE,SAAS,UAAWF,EAAQE,SAAS,QACvFC,EAAqB,WAE9BH,EAAQE,SAAS,cAAgBF,EAAQE,SAAS,YACzCC,EAAqB,UAE9BH,EAAQE,SAAS,cACRC,EAAqB,cAE9BH,EAAQE,SAAS,QAAUF,EAAQE,SAAS,UACnCC,EAAqB,cAE9BH,EAAQE,SAAS,WAAaF,EAAQE,SAAS,UACtCC,EAAqB,UAE9BH,EAAQE,SAAS,WAAaF,EAAQE,SAAS,eACtCC,EAAqB,UAE9BH,EAAQE,SAAS,cAAgBF,EAAQE,SAAS,cAAeF,EAAQE,SAAS,YACzEC,EAAqB,gBAE9BH,EAAQE,SAAS,YAAcF,EAAQE,SAAS,UACvCC,EAAqB,UAGrBA,EAAqB,YAK5BA,EAAoB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,2DAC1BD,EAD0B,OAE3B,YAF2B,OAU3B,eAV2B,OAa3B,WAb2B,OAgB3B,WAhB2B,OAmB3B,WAnB2B,QAsBzB,iBAtByB,QAyB3B,eAzB2B,QA4B3B,WA5B2B,wCAIxB,mDAAuBE,MAAK,SAAAC,GAChCC,EAAiBD,EAAaE,sBALF,cAO9BC,QAAQC,IAAI,gBAAgBH,GAPE,4BAQpBI,KARoB,YAQLA,EAASJ,GARJ,YAQsBI,iBARtB,gCAWvBA,cAXuB,gCAcvBA,UAduB,gCAiBvBA,iBAjBuB,iCAoBvBA,sBApBuB,iCAuBrBA,gBAvBqB,iCA0BvBA,cA1BuB,iCA6BvBA,YA7BuB,iCAgCvBA,WAhCuB,4CAAH","file":"static/js/5.b880ddfd.chunk.js","sourcesContent":["import * as Messages from './constants';\n\nexport const generateReplyMessage = (message) => {\n  message.toLowerCase();\n  let resultMessage;\n  if ((message.includes(\"hello\") || message.includes(\"hi\") || message.includes('hey'))&& !message.includes(\"this\") ) {\n    resultMessage = findMatchingResponse('Initial')\n  }\n  else if (message.includes(\"introduce\") || message.includes(\"yourself\")) {\n    resultMessage = findMatchingResponse('Myself')\n  }\n  else if (message.includes(\"experience\")) {\n    resultMessage = findMatchingResponse('Experience')\n  }\n  else if (message.includes(\"job\") || message.includes(\"change\")) {\n    resultMessage = findMatchingResponse('Job Change')\n  }\n  else if (message.includes(\"notice\") && message.includes(\"period\")) {\n    resultMessage = findMatchingResponse('Notice')\n  }\n  else if (message.includes(\"salary\") || message.includes(\"expectation\")) {\n    resultMessage = findMatchingResponse('Salary')\n  }\n  else if (message.includes(\"available\") || message.includes(\"interview\")|| message.includes(\"schedule\")) {\n    resultMessage = findMatchingResponse('Availability')\n  }\n  else if (message.includes(\"updated\") || message.includes(\"resume\")) {\n    resultMessage = findMatchingResponse('Resume')\n  }\n  else {\n    resultMessage = findMatchingResponse('default')\n  }\n  return resultMessage;\n}\n\nexport const findMatchingResponse = async(type) => {\n  switch (type) {\n    case \"Initial\":\n      let currentPeriod;\n      await import (\"./common.js\").then(eachCommonFn=>{\n        currentPeriod =  eachCommonFn.getCurrentPeriod()\n      })\n      console.log('currentPeriod',currentPeriod)\n      return `${Messages.HI} ${Messages[currentPeriod]} ${Messages.NICE_TO_HEAR}`;\n\n    case \"Experience\":\n      return Messages.EXPERIENCE;\n\n    case \"Resume\":\n      return Messages.RESUME;\n\n    case \"Notice\":\n      return Messages.NOTICE_PERIOD;\n\n    case \"Salary\":\n      return Messages.SALARY_EXPECTATION;\n\n      case \"Availability\":\n        return Messages.AVAILABILITY;\n\n    case \"Job Change\":\n      return Messages.JOB_CHANGE;\n\n    case \"Myself\":\n      return Messages.ABOUT_ME;\n\n    default:\n      return Messages.DEFAULT;\n  }\n}"],"sourceRoot":""}